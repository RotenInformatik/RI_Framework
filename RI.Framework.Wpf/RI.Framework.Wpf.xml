<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RI.Framework.Wpf</name>
    </assembly>
    <members>
        <member name="T:RI.Framework.Services.WpfBootstrapper">
            <summary>
                Implements a bootstrapper for WPF applications.
            </summary>
            <remarks>
                <para>
                    The following sequence is performed when <see cref="M:RI.Framework.Services.WpfBootstrapper.Run" /> is called:
                </para>
                <list type="number">
                    <item>
                        <para>
                            <see cref="P:RI.Framework.Services.WpfBootstrapper.State" /> is set to <see cref="F:RI.Framework.Services.WpfBootstrapperState.Bootstrapping" />.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationAssembly" /> is called and <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationAssembly" /> is set.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationProductName" /> is called and <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationProductName" /> is set.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationCompanyName" /> is called and <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationCompanyName" /> is set.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationCopyright" /> is called and <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationCopyright" /> is set.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationVersion" /> is called and <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationVersion" /> is set.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationIdVersionIndependent" /> is called and <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationIdVersionIndependent" /> is set.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationIdVersionDependent" /> is called and <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationIdVersionDependent" /> is set.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.DetermineSessionTimestamp" /> is called and <see cref="P:RI.Framework.Services.WpfBootstrapper.SessionTimestamp" /> is set.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.DetermineSessionId" /> is called and <see cref="P:RI.Framework.Services.WpfBootstrapper.SessionId" /> is set.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationExecutableDirectory" /> is called and <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationExecutableDirectory" /> is set.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationDataDirectory" /> is called and <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationDataDirectory" /> is set.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.CreateContainer" /> is called and <see cref="P:RI.Framework.Services.WpfBootstrapper.Container" /> is set.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.ConfigureBootstrapper" /> is called.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.ConfigureServiceLocator" /> is called.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.ConfigureLogging" /> is called.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.CreateApplication" /> is called and <see cref="P:RI.Framework.Services.WpfBootstrapper.Application" /> is set.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.ConfigureApplication" /> is called.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.ShowSplashScreen" /> is called.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.ConfigureContainer" /> is called.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.ConfigureServices" /> is called.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.ConfigureModularization" /> is called.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="P:RI.Framework.Services.WpfBootstrapper.State" /> is set to <see cref="F:RI.Framework.Services.WpfBootstrapperState.Running" />.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.BeginRun" /> is called.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="P:RI.Framework.Services.WpfBootstrapper.Application" />.<see cref="M:System.Windows.Application.Run" /> is called. The application is now running until <see cref="M:RI.Framework.Services.WpfBootstrapper.Shutdown" /> is called.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.FinishRun" /> is called.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="P:RI.Framework.Services.WpfBootstrapper.State" /> is set to <see cref="F:RI.Framework.Services.WpfBootstrapperState.ShuttingDown" />.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.BeginShutdown" /> is called.
                        </para>
                    </item>
                    <item>
                        <para>
                            Remaining operations in the applications dispatcher are processed.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.FinishShutdown" /> is called.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="P:RI.Framework.Services.WpfBootstrapper.State" /> is set to <see cref="F:RI.Framework.Services.WpfBootstrapperState.ShutDown" />.
                        </para>
                    </item>
                    <item>
                        <para>
                            <see cref="M:RI.Framework.Services.WpfBootstrapper.Run" /> returns.
                        </para>
                    </item>
                </list>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.#ctor">
            <summary>
                Creates a new instance of <see cref="T:RI.Framework.Services.WpfBootstrapper" />.
            </summary>
        </member>
        <member name="P:RI.Framework.Services.WpfBootstrapper.Application">
            <summary>
                Gets the used WPF application object.
            </summary>
            <value>
                The used WPF application object.
            </value>
        </member>
        <member name="P:RI.Framework.Services.WpfBootstrapper.ApplicationAssembly">
            <summary>
                Gets the main assembly of the application.
            </summary>
            <value>
                The main assembly of the application.
            </value>
        </member>
        <member name="P:RI.Framework.Services.WpfBootstrapper.ApplicationCompanyName">
            <summary>
                Gets the associated company name of the application.
            </summary>
            <value>
                The associated company name of the application.
            </value>
        </member>
        <member name="P:RI.Framework.Services.WpfBootstrapper.ApplicationCopyright">
            <summary>
                Gets the copyright statement of the application.
            </summary>
            <value>
                The copyright statement of the application.
            </value>
        </member>
        <member name="P:RI.Framework.Services.WpfBootstrapper.ApplicationDataDirectory">
            <summary>
                Gets the read- and writeable directory associated with the application used to store persistent data.
            </summary>
            <value>
                The read- and writeable directory associated with the application used to store persistent data.
            </value>
        </member>
        <member name="P:RI.Framework.Services.WpfBootstrapper.ApplicationExecutableDirectory">
            <summary>
                Gets the read-only directory where the applications executable files are stored.
            </summary>
            <value>
                The read-only directory where the applications executable files are stored.
            </value>
        </member>
        <member name="P:RI.Framework.Services.WpfBootstrapper.ApplicationIdVersionDependent">
            <summary>
                Gets the GUID of the application which is application version dependent.
            </summary>
            <value>
                The GUID of the application which is application version dependent.
            </value>
        </member>
        <member name="P:RI.Framework.Services.WpfBootstrapper.ApplicationIdVersionIndependent">
            <summary>
                Gets the GUID of the application which is application version independent.
            </summary>
            <value>
                The GUID of the application which is application version independent.
            </value>
        </member>
        <member name="P:RI.Framework.Services.WpfBootstrapper.ApplicationProductName">
            <summary>
                Gets the product name of the application.
            </summary>
            <value>
                The product name of the application.
            </value>
        </member>
        <member name="P:RI.Framework.Services.WpfBootstrapper.ApplicationVersion">
            <summary>
                Gets the version of the application.
            </summary>
            <value>
                The version of the application.
            </value>
        </member>
        <member name="P:RI.Framework.Services.WpfBootstrapper.Container">
            <summary>
                Gets the used composition container.
            </summary>
            <value>
                The used composition container.
            </value>
        </member>
        <member name="P:RI.Framework.Services.WpfBootstrapper.SessionId">
            <summary>
                Gets the GUID of the current session.
            </summary>
            <value>
                The GUID of the current session.
            </value>
        </member>
        <member name="P:RI.Framework.Services.WpfBootstrapper.SessionTimestamp">
            <summary>
                Gets the timestamp of the current session.
            </summary>
            <value>
                The timestamp of the current session.
            </value>
        </member>
        <member name="P:RI.Framework.Services.WpfBootstrapper.State">
            <summary>
                Gets the current state of the bootstrapper.
            </summary>
            <value>
                The current state of the bootstrapper.
            </value>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.Log(RI.Framework.Services.Logging.LogLevel,System.String,System.Object[])">
            <summary>
                Logs a message.
            </summary>
            <param name="severity"> The severity of the message. </param>
            <param name="format"> The message. </param>
            <param name="args"> The arguments which will be expanded into the message (comparable to <see cref="M:System.String.Format(System.String,System.Object[])" />). </param>
            <remarks>
                <para>
                    <see cref="T:RI.Framework.Services.Logging.ILogService" /> is used, obtained through <see cref="T:RI.Framework.Services.ServiceLocator" />.
                    If no <see cref="T:RI.Framework.Services.Logging.ILogService" /> is available, no logging is performed.
                </para>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.BeginRun">
            <summary>
                Called before the application begins running after the bootstrapping is completed.
            </summary>
            <remarks>
                <note type="implement">
                    The default implementation does nothing.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.BeginShutdown">
            <summary>
                Called before the application begins shutting down.
            </summary>
            <remarks>
                <note type="implement">
                    The default implementation does nothing.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.ConfigureApplication">
            <summary>
                Called when the used WPF application object (<see cref="P:RI.Framework.Services.WpfBootstrapper.Application" />) needs to be configured.
            </summary>
            <remarks>
                <note type="implement">
                    The default implementation does nothing.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.ConfigureBootstrapper">
            <summary>
                Called when the bootstrapper itself needs to be configured.
            </summary>
            <remarks>
                <note type="implement">
                    The default implementation adds this bootstrapper instance to the used composition container as an export using a <see cref="T:RI.Framework.Composition.Catalogs.InstanceCatalog" />.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.ConfigureContainer">
            <summary>
                Called when the used composition container (<see cref="P:RI.Framework.Services.WpfBootstrapper.Container" />) needs to be configured.
            </summary>
            <remarks>
                <note type="implement">
                    The default implementation does nothing.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.ConfigureLogging">
            <summary>
                Called when the logging needs to be configured.
            </summary>
            <remarks>
                <note type="implement">
                    The default implementation does nothing.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.ConfigureModularization">
            <summary>
                Called when the modularization needs to be configured.
            </summary>
            <remarks>
                <note type="implement">
                    The default implementation does nothing.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.ConfigureServiceLocator">
            <summary>
                Called when the service locator (<see cref="T:RI.Framework.Services.ServiceLocator" />) needs to be configured.
            </summary>
            <remarks>
                <note type="implement">
                    The default implementation calls <see cref="M:RI.Framework.Services.ServiceLocator.BindToCompositionContainer(RI.Framework.Composition.CompositionContainer)" /> using the used composition container (<see cref="P:RI.Framework.Services.WpfBootstrapper.Container" />).
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.ConfigureServices">
            <summary>
                Called when all the other services of the application need to be configured.
            </summary>
            <remarks>
                <note type="implement">
                    The default implementation does nothing.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.CreateApplication">
            <summary>
                Called when the WPF application object needs to be created.
            </summary>
            <returns>
                The WPF application object to be used.
                Can be null if a default <see cref="T:System.Windows.Application" /> is to be used.
            </returns>
            <remarks>
                <note type="implement">
                    The default implementation returns null so a default <see cref="T:System.Windows.Application" /> will be created and used.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.CreateContainer">
            <summary>
                Called when the composition container needs to be created.
            </summary>
            <returns>
                The composition container to be used.
                Can be null if a default <see cref="T:RI.Framework.Composition.CompositionContainer" /> is to be used.
            </returns>
            <remarks>
                <note type="implement">
                    The default implementation returns null so a default <see cref="T:RI.Framework.Composition.CompositionContainer" /> will be created and used.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationAssembly">
            <summary>
                Called to determine the main assembly of the application (<see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationAssembly" />).
            </summary>
            <returns>
                The main assembly of the application.
                Cannot be null.
            </returns>
            <remarks>
                <note type="implement">
                    The default implementation uses <see cref="M:System.Reflection.Assembly.GetEntryAssembly" /> to determine the main assembly.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationCompanyName">
            <summary>
                Called to determine the associated company name of the application (<see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationCompanyName" />).
            </summary>
            <returns>
                The associated company name of the application.
                Cannot be null.
            </returns>
            <remarks>
                <note type="implement">
                    The default implementation uses <see cref="M:RI.Framework.Utilities.Reflection.AssemblyExtensions.GetCompany(System.Reflection.Assembly)" /> on <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationAssembly" />.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationCopyright">
            <summary>
                Called to determine the copyright of the application (<see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationCopyright" />).
            </summary>
            <returns>
                The copyright of the application.
                Cannot be null.
            </returns>
            <remarks>
                <note type="implement">
                    The default implementation uses <see cref="M:RI.Framework.Utilities.Reflection.AssemblyExtensions.GetCopyright(System.Reflection.Assembly)" /> on <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationAssembly" />.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationDataDirectory">
            <summary>
                Called to determine the read- and writeable directory associated with the application used to store persistent data (<see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationDataDirectory" />).
            </summary>
            <returns>
                The read- and writeable directory associated with the application used to store persistent data.
                Cannot be null.
            </returns>
            <remarks>
                <note type="implement">
                    The default implementation uses the directory returned by <see cref="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)" /> using <see cref="F:System.Environment.SpecialFolder.LocalApplicationData" /> appended with <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationCompanyName" /> and <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationProductName" />.
                    The directory is just determined but not accessed in any way.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationExecutableDirectory">
            <summary>
                Called to determine the read-only directory where the applications executable files are stored (<see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationExecutableDirectory" />).
            </summary>
            <returns>
                The read-only directory where the applications executable files are stored.
                Cannot be null.
            </returns>
            <remarks>
                <note type="implement">
                    The default implementation uses <see cref="M:RI.Framework.Utilities.Reflection.AssemblyExtensions.GetFile(System.Reflection.Assembly)" /> on <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationAssembly" />.
                    The directory is just determined but not accessed in any way.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationIdVersionDependent">
            <summary>
                Called to determine the GUID of the application which is application version dependent (<see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationIdVersionDependent" />).
            </summary>
            <returns>
                The GUID of the application which is application version dependent.
            </returns>
            <remarks>
                <note type="implement">
                    The default implementation uses <see cref="M:RI.Framework.Utilities.Reflection.AssemblyExtensions.GetGuid(System.Reflection.Assembly,System.Boolean,System.Boolean)" /> on <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationAssembly" />.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationIdVersionIndependent">
            <summary>
                Called to determine the GUID of the application which is application version independent (<see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationIdVersionIndependent" />).
            </summary>
            <returns>
                The GUID of the application which is application version independent.
            </returns>
            <remarks>
                <note type="implement">
                    The default implementation uses <see cref="M:RI.Framework.Utilities.Reflection.AssemblyExtensions.GetGuid(System.Reflection.Assembly,System.Boolean,System.Boolean)" /> on <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationAssembly" />.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationProductName">
            <summary>
                Called to determine the product name of the application (<see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationProductName" />).
            </summary>
            <returns>
                The product name of the application.
                Cannot be null.
            </returns>
            <remarks>
                <note type="implement">
                    The default implementation uses <see cref="M:RI.Framework.Utilities.Reflection.AssemblyExtensions.GetProduct(System.Reflection.Assembly)" /> on <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationAssembly" />.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.DetermineApplicationVersion">
            <summary>
                Called to determine the version of the application (<see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationVersion" />).
            </summary>
            <returns>
                The version of the application.
                Cannot be null.
            </returns>
            <remarks>
                <note type="implement">
                    The default implementation uses <see cref="M:RI.Framework.Utilities.Reflection.AssemblyExtensions.GetAssemblyVersion(System.Reflection.Assembly)" />, <see cref="M:RI.Framework.Utilities.Reflection.AssemblyExtensions.GetFileVersion(System.Reflection.Assembly)" />, and <see cref="M:RI.Framework.Utilities.Reflection.AssemblyExtensions.GetInformationalVersion(System.Reflection.Assembly)" /> on <see cref="P:RI.Framework.Services.WpfBootstrapper.ApplicationAssembly" /> (in that order, whichever returns a valid version first).
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.DetermineSessionId">
            <summary>
                Called to determine the GUID of the current session (<see cref="P:RI.Framework.Services.WpfBootstrapper.SessionId" />).
            </summary>
            <returns>
                The GUID of the current session.
            </returns>
            <remarks>
                <note type="implement">
                    The default implementation simply creates a new <see cref="T:System.Guid" /> using <see cref="M:System.Guid.NewGuid" />.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.DetermineSessionTimestamp">
            <summary>
                Called to determine the timestamp of the current session (<see cref="P:RI.Framework.Services.WpfBootstrapper.SessionTimestamp" />).
            </summary>
            <returns>
                The timestamp of the current session.
            </returns>
            <remarks>
                <note type="implement">
                    The default implementation simply returns the value of <see cref="P:System.DateTime.Now" /> at the time of calling.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.FinishRun">
            <summary>
                Called before the application begins shutting down after the application was running.
            </summary>
            <remarks>
                <note type="implement">
                    The default implementation does nothing.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.FinishShutdown">
            <summary>
                Called after the application finished shutting down.
            </summary>
            <remarks>
                <note type="implement">
                    The default implementation does nothing.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.HandleException(System.Exception)">
            <summary>
                Called when an unhandled exception occurs in the application.
            </summary>
            <param name="exception"> The unhandled exception. </param>
            <remarks>
                <para>
                    The default implementation does nothing.
                </para>
                <para>
                    Whatever you do in this method, the application is terminated using <see cref="M:System.Environment.FailFast(System.String,System.Exception)" /> after this method returns.
                </para>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.ShowSplashScreen">
            <summary>
                Called when the splash screen can be created and shown.
            </summary>
            <remarks>
                <note type="implement">
                    The default implementation does nothing.
                </note>
            </remarks>
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.Run">
            <inheritdoc />
        </member>
        <member name="M:RI.Framework.Services.WpfBootstrapper.Shutdown">
            <inheritdoc />
        </member>
        <member name="T:RI.Framework.Services.WpfBootstrapperState">
            <summary>
                Describes the current state of a WPF application bootstrapper.
            </summary>
        </member>
        <member name="F:RI.Framework.Services.WpfBootstrapperState.Uninitialized">
            <summary>
                The bootstrapper is unitialized (<see cref="M:RI.Framework.Services.WpfBootstrapper.Run" /> was not called).
            </summary>
        </member>
        <member name="F:RI.Framework.Services.WpfBootstrapperState.Bootstrapping">
            <summary>
                The bootstrapping is in progress (<see cref="M:RI.Framework.Services.WpfBootstrapper.Run" /> was called but the application is not yet running).
            </summary>
        </member>
        <member name="F:RI.Framework.Services.WpfBootstrapperState.Running">
            <summary>
                The application is running.
            </summary>
        </member>
        <member name="F:RI.Framework.Services.WpfBootstrapperState.ShuttingDown">
            <summary>
                The shutdown is in progress (<see cref="M:RI.Framework.Services.WpfBootstrapper.Shutdown" /> was called).
            </summary>
        </member>
        <member name="F:RI.Framework.Services.WpfBootstrapperState.ShutDown">
            <summary>
                The shutdown is finished (<see cref="M:RI.Framework.Services.WpfBootstrapper.Run" /> returned).
            </summary>
        </member>
        <member name="T:RI.Framework.Utilities.ApplicationExtensions">
            <summary>
                Provides utility/extension methods for the <see cref="T:System.Windows.Application" /> type.
            </summary>
        </member>
        <member name="M:RI.Framework.Utilities.ApplicationExtensions.DoAllEvents(System.Windows.Application)">
            <summary>
                Forces the application to process all its queued operations.
            </summary>
            <param name="application"> The application. </param>
            <remarks>
                <para>
                    The method does not return until all operations are processed.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException"> <paramref name="application" /> is null. </exception>
        </member>
        <member name="M:RI.Framework.Utilities.ApplicationExtensions.DoEvents(System.Windows.Application,System.Windows.Threading.DispatcherPriority)">
            <summary>
                Forces the application to process all its queued operations up to and including the specified priority.
            </summary>
            <param name="application"> The application. </param>
            <param name="priority"> The priority up to and including all operations are to be processed. </param>
            <remarks>
                <para>
                    The method does not return until all operations as specified are processed.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException"> <paramref name="application" /> is null. </exception>
        </member>
        <member name="T:RI.Framework.Utilities.DispatcherExtensions">
            <summary>
                Provides utility/extension methods for the <see cref="T:System.Windows.Threading.Dispatcher" /> type.
            </summary>
        </member>
        <member name="M:RI.Framework.Utilities.DispatcherExtensions.DoAllEvents(System.Windows.Threading.Dispatcher)">
            <summary>
                Forces the dispatcher to process all its queued operations.
            </summary>
            <param name="dispatcher"> The dispatcher. </param>
            <remarks>
                <para>
                    The method does not return until all operations are processed.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dispatcher" /> is null. </exception>
        </member>
        <member name="M:RI.Framework.Utilities.DispatcherExtensions.DoEvents(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)">
            <summary>
                Forces the dispatcher to process all its queued operations up to and including the specified priority.
            </summary>
            <param name="dispatcher"> The dispatcher. </param>
            <param name="priority"> The priority up to and including all operations are to be processed. </param>
            <remarks>
                <para>
                    The method does not return until all operations as specified are processed.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dispatcher" /> is null. </exception>
        </member>
    </members>
</doc>
