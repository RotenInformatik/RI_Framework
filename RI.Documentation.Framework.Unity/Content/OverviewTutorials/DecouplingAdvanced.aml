<?xml version="1.0" encoding="utf-8"?>

<topic id="8ec8f13f-ef95-4aec-8fc1-9b54dff96e01"
       revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
                               xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>
        A more advanced use of the decoupling features is described in this section.
      </para>
      <alert class="important">
        <para>
          Please consider reading the remarks section of type and member descriptions as they often contain futher explanations and provide more detailed information.
        </para>
      </alert>
      <autoOutline/>
    </introduction>

    <section address="Bootstrapper">
      <title>Bootstrapper</title>
        <content/>
        <sections>
            <section>
                <title>No Bootstrapper</title>
                <content>
                    <para>
                        One important thing to know about the bootstrapper is that you do not need it.
                        You can use each decoupling service, without the bootstrapper, as its own independent standalone service (e.g. if you only want/need one of them).
                        However, you would have to do all the setup and wiring yourself.
                        Following sections will describe how to use each decoupling service as an independent standalone service.
                    </para>
                </content>
            </section>
            <section>
                <title>Bootstrapper options</title>
                <content>
                    <para>
                        The bootstrapper provides a few options:
                    </para>
                    <mediaLink>
                        <image xlink:href="BootstrapperOptions"/>
                    </mediaLink>
                    <para>
                        These options can be helpful if you do want to use the bootstrapper but not all of the decoupling services or if you want to use your own implementation of a service.
                        The only decoupling service always required by the bootstrapper is the <codeEntityReference qualifyHint="false">T:RI.Framework.Composition.CompositionContainer</codeEntityReference>.
                    </para>
                    <para>
                        The available options are:
                    </para>
                    <list class="bullet">
                        <listItem>
                            <para>
                                <legacyBold>Logging Service</legacyBold>:
                                Disabled by default.
                                Creates the logging service (<codeEntityReference qualifyHint="false">T:RI.Framework.Services.Logging.ILogService</codeEntityReference>, implemented by <codeEntityReference qualifyHint="false">T:RI.Framework.Services.Logging.LogService</codeEntityReference>) if enabled.
                                It is used internally by the framework to create log output and therefore can be used to enable/disable all log output generated by the framework.
                                It is disabled by default to not spam your logs as especially the <codeEntityReference qualifyHint="false">T:RI.Framework.Composition.CompositionContainer</codeEntityReference> can generate excessive log entries.
                            </para>
                        </listItem>
                        <listItem>
                            <para>
                                <legacyBold>Module Service</legacyBold>:
                                Enabled by default.
                                Creates the modularization service (<codeEntityReference qualifyHint="false">T:RI.Framework.Services.Modularization.IModuleService</codeEntityReference>, implemented by <codeEntityReference qualifyHint="false">T:RI.Framework.Services.Modularization.ModuleService</codeEntityReference>) if enabled.
                            </para>
                        </listItem>
                        <listItem>
                            <para>
                                <legacyBold>Module Initialization</legacyBold>:
                                Enabled by default.
                                If enabled, the bootstrapper will automatically initialize the modules during start if an <codeEntityReference qualifyHint="false">T:RI.Framework.Services.Modularization.IModuleService</codeEntityReference> is available.
                                <codeEntityReference qualifyHint="false">M:RI.Framework.Services.Modularization.IModuleService.Initialize</codeEntityReference> will be called.
                            </para>
                        </listItem>
                        <listItem>
                            <para>
                                <legacyBold>Module Unloading</legacyBold>:
                                Enabled by default.
                                If enabled, the bootstrapper will automatically unload the modules during shutdown if an <codeEntityReference qualifyHint="false">T:RI.Framework.Services.Modularization.IModuleService</codeEntityReference> is available.
                                <codeEntityReference qualifyHint="false">M:RI.Framework.Services.Modularization.IModuleService.Unload</codeEntityReference> will be called.
                            </para>
                        </listItem>
                        <listItem>
                            <para>
                                <legacyBold>Dispatcher Service</legacyBold>:
                                Enabled by default.
                                Creates the dispatcher service (<codeEntityReference qualifyHint="false">T:RI.Framework.Services.Dispatcher.IDispatcherService</codeEntityReference>, implemented by <codeEntityReference qualifyHint="false">T:RI.Framework.Services.Dispatcher.DispatcherService</codeEntityReference>) if enabled.
                            </para>
                        </listItem>
                        <listItem>
                            <para>
                                <legacyBold>Scripting Catalog</legacyBold>:
                                Enabled by default.
                                Adds a <codeEntityReference qualifyHint="false">T:RI.Framework.Composition.Catalogs.ScriptingCatalog</codeEntityReference> to the <codeEntityReference qualifyHint="false">T:RI.Framework.Composition.CompositionContainer</codeEntityReference>.
                                The purpose and use of catalogs is described below.
                            </para>
                        </listItem>
                        <listItem>
                            <para>
                                <legacyBold>Service Locator Binding</legacyBold>:
                                Enabled by default.
                                Binds the <codeEntityReference qualifyHint="false">T:RI.Framework.Services.ServiceLocator</codeEntityReference> to <codeEntityReference qualifyHint="false">T:RI.Framework.Composition.CompositionContainer</codeEntityReference> if enabled.
                            </para>
                        </listItem>
                    </list>
                </content>
            </section>
        </sections>
    </section>

    <section address="CompositionContainer">
      <title>CompositionContainer</title>
      <content>
          <para>
              Independent
              Catalogs, ScriptingCatalog, AssemblyCatalog, InstanceCatalog, TypeCatalog
          </para>
      </content>
    </section>

    <section address="ServiceLocator">
      <title>ServiceLocator</title>
      <content>
          <para>
              No CompositionContainer
          </para>
      </content>
    </section>

    <section address="IModuleService">
      <title>IModuleService</title>
      <content>
          <para>
              Only interface
              Independent
              No CompositionContainer
              IModule and Module
              Transitive Initialization/Unloading
          </para>
      </content>
    </section>

    <section address="IDispatcherService">
      <title>IDispatcherService</title>
      <content>
          <para>
              Only interface
              Independent
              No CompositionContainer
              IDispatcherOperation
          </para>
      </content>
    </section>

    <relatedTopics />

  </developerConceptualDocument>
</topic>
